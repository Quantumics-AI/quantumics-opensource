#Properties to update by user

qs.user.username=testuser123@gmail.com
qs.user.password=Test@123

spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.url=jdbc:postgresql://postgres:5432/devqsai

qs.cloud.region=ap-southeast-1
s3.credentials.accessKey=AKIASIISSAEBGRRWRDCD
s3.credentials.secretKey=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

glue.credentials.accessKey=AKIASIISSAEBGRRWRDCD
glue.credentials.secretKey=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

athena.credentials.accessKey=AKIASIISSAEBGRRWRDCD
athena.credentials.secretKey=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

qs.livy.base.url=http://ec2-18-142-179-92.ap-southeast-1.compute.amazonaws.com:8998/sessions/
qs.livy.base.batches.url=http://ec2-18-142-179-92.ap-southeast-1.compute.amazonaws.com:8998/batches/

qs.redash.user.url=http://server:5000/register

#default buckets need to create in s3
s3.images.project.bucketName=qsai-application-images-test/Project-Images
s3.images.user.bucketName=qsai-application-images-test/User-Images
s3.udf.bucketName=qsai-application-udf-test
qs.athena.query.output=s3://qs-athena-query-output-test/data/
qs.glue.etl.output=s3://qsai-test121-processed-test/
qs.eng.etl.output=s3://qsai-test121-processed-test/eng/
qs.s3.result.store=s3://qsai-eng-results-test

qs.service.server.host.url=http://172.19.48.1:8080/
qs.service.end.point.url=http://gateway:8080/QuantumSparkServiceAPI



# Bit Bucket storage location
#qs.bitbucket.api.url=https://api.bitbucket.org/2.0/repositories
#qs.bitbucket.api.repo=udf
#qs.bitbucket.api.key=x2mqSYBRzZ95e9nBqzYE
#qs.bitbucket.api.username=kondareddygattupalle
#qs.bitbucket.api.branch=test

#------------------------------------------------------------------------------------------
#Common Properties No need to update by user
management.endpoints.web.exposure.include=*
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.maximumPoolSize=3
spring.datasource.hikari.max-lifetime=180000
spring.datasource.hikari.connectionTimeout=30000
spring.mvc.pathmatch.matching-strategy=ant-path-matcher
server.tomcat.max-swallow-size=1000MB
server.tomcat.max-http-form-post-size=1000MB
spring.datasource.hikari.leak-detection-threshold=300000
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.generate_statistics=false
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=create
spring.jpa.show-sql=false
spring.jpa.open-in-view=true
spring.main.allow-circular-references=true
cloud.aws.region.auto=false
spring.servlet.multipart.enabled=true
spring.servlet.multipart.location=${java.io.tmpdir}
spring.servlet.multipart.max-file-size=20MB
qs.file.max-size=104857600
qs.athena.sleep=2000
qs.athena.query.limit=500
qs.livy.batch.job.max.timeout.period=300000
cloud.aws.stack.auto=false
