#Properties to update by user
qs.cloud.region=${AWS_REGION}
s3.credentials.accessKey=${AWS_ACCESS_KEY}
s3.credentials.secretKey=${AWS_SECRET_KEY}

glue.credentials.accessKey=${AWS_ACCESS_KEY}
glue.credentials.secretKey=${AWS_SECRET_KEY}

athena.credentials.accessKey=${AWS_ACCESS_KEY}
athena.credentials.secretKey=${AWS_SECRET_KEY}

qs.livy.base.url=${LIVY_URL}/sessions/
qs.livy.base.batches.url=${LIVY_URL}/batches/
qs.project.name=${PROJECT_NAME}

#default buckets need to create in s3
s3.images.project.bucketName=${S3_IMAGES_PROJECT_BUCKET}
s3.images.user.bucketName={S3_IMAGES_USER_BUCKET}
s3.udf.bucketName=${S3_UDF_BUCKET}
qs.athena.query.output=${S3_ATHENA_QUERY_LOCATION}
qs.glue.etl.output=${S3_CLEANSING_ETL_LOCATION}
qs.eng.etl.output=${S3_ENG_ETL_LOCATION}
qs.s3.result.store=${S3_ENG_RESULT_LOCATION}
qs.service.server.host.url=${SERVICE_HOST_URL}
qs.user.username=quantumics
qs.user.password=quantumics
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.url=jdbc:postgresql://postgres:5432/devqsai

qs.redash.user.url=http://server:5000/register
qs.service.end.point.url=http://gateway:8080/QuantumSparkServiceAPI
#------------------------------------------------------------------------------------------
#Common Properties No need to update by user
management.endpoints.web.exposure.include=*
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.maximumPoolSize=3
spring.datasource.hikari.max-lifetime=180000
spring.datasource.hikari.connectionTimeout=30000
spring.mvc.pathmatch.matching-strategy=ant-path-matcher
server.tomcat.max-swallow-size=1000MB
server.tomcat.max-http-form-post-size=1000MB
spring.datasource.hikari.leak-detection-threshold=300000
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.generate_statistics=false
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=create
spring.jpa.show-sql=false
spring.jpa.open-in-view=true
spring.main.allow-circular-references=true
cloud.aws.region.auto=false
spring.servlet.multipart.enabled=true
spring.servlet.multipart.location=${java.io.tmpdir}
spring.servlet.multipart.max-file-size=20MB
qs.file.max-size=104857600
qs.athena.sleep=2000
qs.athena.query.limit=500
qs.livy.batch.job.max.timeout.period=300000
cloud.aws.stack.auto=false